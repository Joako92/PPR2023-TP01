Object subclass: #Agencia	instanceVariableNames: 'nombre paquetes'	classVariableNames: ''	package: 'TP1_94663Brondo_'!!Agencia commentStamp: 'AgustinOliva 4/27/2023 09:22' prior: 0!Please comment me using the following template inspired by Class Responsibility Collaborator (CRC) design: For the Class part:  State a one line summary. For example, "I represent a paragraph of text".For the Responsibility part: Three sentences about my main responsibilities - what I do, what I know.For the Collaborators Part: State my main collaborators and one line about how I interact with them. Public API and Key Messages- message one   - message two - (for bonus points) how to create instances.   One simple example is simply gorgeous. Internal Representation and Key Implementation Points.    Instance Variables	nombre:		<Object>	paquetes:		<Object>    Implementation Points!!Agencia methodsFor: 'initialization' stamp: 'AgustinOliva 4/27/2023 09:37'!initialize 	nombre := 'ViajaF√°cil'.	paquetes := OrderedCollection new.! !!Agencia methodsFor: 'propios' stamp: 'AgustinOliva 4/27/2023 11:08'!registrarPaquete: anObject		"Registraremos un nuevo paquete tur√≠stico en la colecci√≥n s√≥lo si la fecha de salida es mayor a la 	fecha actual registrada en el dispositivo desde el ecual se est√© usando el software.	Aclaraci√≥n: son posibles las comparaciones entre las clases DateAndTime y Date."		(anObject class = CircuitoNacional) | (anObject class = PaqueteMedida) ifTrue: 													[ anObject fechaDesde > Date today ifTrue: [ paquetes add: anObject ]. ]	! !!Agencia methodsFor: 'accessing' stamp: 'AgustinOliva 4/27/2023 09:38'!nombre: anObject	anObject class = String ifTrue: [ nombre := anObject . ].	! !!Agencia methodsFor: 'accessing' stamp: 'AgustinOliva 4/27/2023 09:37'!nombre	^ nombre! !!Agencia methodsFor: 'accessing' stamp: 'Joaco 5/1/2023 11:57'!paquetes: anObject	anObject class = PaqueteTuristico ifTrue: [ paquetes := anObject . ].! !!Agencia methodsFor: 'accessing' stamp: 'AgustinOliva 4/27/2023 09:37'!paquetes	^ paquetes! !Object subclass: #PaqueteTuristico	instanceVariableNames: 'codigo nombre costoGestion fechaDesde fechaHasta'	classVariableNames: ''	package: 'TP1_94663Brondo_'!!PaqueteTuristico commentStamp: 'Joaco 4/22/2023 19:04' prior: 0!Descripci‚àö‚â•n:Entidad gen‚àö¬©rica que describe un paquete tur‚àö‚â†stico ofrecido por la empresa. Comportamientos:	√î√á‚àë Inicializaci‚àö‚â•n	√î√á‚àë mensajes de acceso y modificaci‚àö‚â•n	√î√á‚àë calcularPrecio: que retorna el costo de gesti‚àö‚â•n	del paquete.	√î√á‚àë asString: devuelve una cadena con los datos del	paquete.     Instance Variables	codigo:		<Object>	costoGestion:		<Object>	fechaDesde:		<Object>	fechaHasta:		<Object>	nombre:		<Object>    Implementation Points!!PaqueteTuristico methodsFor: 'converting' stamp: 'Joaco 5/1/2023 15:10'!asString 	" devuelve una cadena con los datos del paquete."	^('Codigo: ', self codigo asString, String cr, 	' - Paquete: ', self nombre asString, String cr, 	' - Costo de gestion: $', self costoGestion asString, String cr, 	' - Fecha desde: ', self fechaDesde ddmmyyyy, String cr, 	' - Fecha hasta: ', self fechaHasta ddmmyyyy, String cr ).	! !!PaqueteTuristico methodsFor: 'inicializacion' stamp: 'Joaco 5/1/2023 14:02'!initialize 	"inicializa la instancia PaqueteTuristico"	nombre:='sin nombre'.	codigo:='AAA000'.	costoGestion:=0.0.	fechaDesde := Date today.	fechaHasta := Date tomorrow.! !!PaqueteTuristico methodsFor: 'accessing' stamp: 'Joaco 4/22/2023 19:04'!costoGestion	^ costoGestion! !!PaqueteTuristico methodsFor: 'accessing' stamp: 'Joaco 5/1/2023 14:13'!fechaHasta: anObject	"La idea es que se agregue la fecha pas√°ndole a nuestro paquete tur√≠stico un objeto cuya clase es 	DateAndTime(por lo que la condici√≥n para efectivamente asignar como fechaHasta al objeto, debe ser 	que su clase sea igual a DateAndTime)"								anObject class = Date ifTrue:[		(anObject > fechaDesde) ifTrue: [(fechaHasta := anObject)] 										ifFalse: [fechaHasta:= fechaDesde]										].! !!PaqueteTuristico methodsFor: 'accessing' stamp: 'Joaco 5/1/2023 13:48'!fechaDesde: anObject	anObject class = Date ifTrue:[ anObject > Date today ifTrue: [fechaDesde := anObject ]].! !!PaqueteTuristico methodsFor: 'accessing' stamp: 'Joaco 4/22/2023 19:05'!nombre: anObject	anObject isString ifTrue:[nombre := anObject].! !!PaqueteTuristico methodsFor: 'accessing' stamp: 'Joaco 5/1/2023 15:06'!codigo: anObject	anObject isString ifTrue:[	codigo := anObject].! !!PaqueteTuristico methodsFor: 'accessing' stamp: 'Joaco 4/22/2023 19:04'!fechaHasta	^ fechaHasta! !!PaqueteTuristico methodsFor: 'accessing' stamp: 'Joaco 4/22/2023 19:04'!nombre	^ nombre! !!PaqueteTuristico methodsFor: 'accessing' stamp: 'Joaco 4/22/2023 19:04'!fechaDesde	^ fechaDesde! !!PaqueteTuristico methodsFor: 'accessing' stamp: 'Joaco 4/22/2023 19:04'!codigo	^ codigo! !!PaqueteTuristico methodsFor: 'accessing' stamp: 'Joaco 4/22/2023 19:06'!costoGestion: anObject	anObject isFloat ifTrue:[costoGestion := anObject].! !!PaqueteTuristico methodsFor: 'propios' stamp: 'Joaco 4/22/2023 21:25'!calcularPrecio	"retorna el costo de gesti‚àö‚â•n del paquete."	^costoGestion 	! !PaqueteTuristico subclass: #CircuitoNacional	instanceVariableNames: 'costoPaquete enFechaEspecial porcentajeExtra'	classVariableNames: ''	package: 'TP1_94663Brondo_'!!CircuitoNacional commentStamp: 'Joaco 4/22/2023 21:30' prior: 0!Descripci‚àö‚â•n:Entidad que describe un tipo de paquete espec‚àö‚â†fico. Esta entidad hereda todo el comportamiento y atributos dePaqueteTuristico. Comportamientos:√î√á‚àë Inicializaci‚àö‚â•n√î√á‚àë mensajes de acceso y modificaci‚àö‚â•n√î√á‚àë calcularPrecio: valor final a pagar por uncircuito nacional seg‚àö‚à´n las consideracionesindicadas anteriormente√î√á‚àë asString: devuelve una cadena con los datos delcircuito, incluyendo su valor final en pesos.     Instance Variables	costoPaquete:		<Object>	enFechaEspecial:		<Object>	porcentajeExtra:		<Object>    Implementation Points!!CircuitoNacional methodsFor: 'inicializacion' stamp: 'AgustinOliva 4/27/2023 10:50'!initialize 	"inicializa la instancia CircuitoNacional"	super initialize.	costoPaquete:=0.0. "costo del paquete seg‚àö‚à´n servicios y d‚àö‚â†as programado"	enFechaEspecial := false. "atributo l‚àö‚â•gico que indica si el paquete corresponde a fechas especiales como feriados o fines de semanas tur‚àö‚â†sticos. "	porcentajeExtra := 0. "porcentaje extra que se adiciona en caso de que el circuito corresponda a fechas especiales."! !!CircuitoNacional methodsFor: 'accessing' stamp: 'Joaco 4/22/2023 21:30'!enFechaEspecial	^ enFechaEspecial! !!CircuitoNacional methodsFor: 'accessing' stamp: 'Joaco 5/1/2023 14:53'!costoPaquete: anObject	anObject isFloat ifTrue:[costoPaquete := anObject]! !!CircuitoNacional methodsFor: 'accessing' stamp: 'Joaco 4/22/2023 21:30'!costoPaquete	^ costoPaquete! !!CircuitoNacional methodsFor: 'accessing' stamp: 'Joaco 4/22/2023 21:30'!porcentajeExtra	^ porcentajeExtra! !!CircuitoNacional methodsFor: 'accessing' stamp: 'Joaco 5/1/2023 15:07'!enFechaEspecial: anObject	enFechaEspecial := anObject.	"(anObject class = True) | (anObject class = False) ifTrue:[ enFechaEspecial := anObject]."! !!CircuitoNacional methodsFor: 'accessing' stamp: 'Joaco 5/1/2023 15:21'!porcentajeExtra: anObject	enFechaEspecial ifTrue:[porcentajeExtra := 10]. " los paquetes para fines de semana largos tienen un 10% de incremento."	porcentajeExtra := anObject.! !!CircuitoNacional methodsFor: 'propios' stamp: 'Joaco 5/1/2023 15:16'!calcularPrecio	"valor final a pagar por un circuito nacional seg‚àö‚à´n las consideraciones indicadas anteriormente"	super calcularPrecio.	^super calcularPrecio + costoPaquete + (costoPaquete * (porcentajeExtra / 100)).! !!CircuitoNacional methodsFor: 'propios' stamp: 'Joaco 5/1/2023 15:21'!asString 	"devuelve una cadena con los datos del circuito, incluyendo su valor final en pesos."	super asString initialize.	^super asString, (String cr, ' - Costo paquete: $', self costoPaquete asString,	String cr, ' - Fecha especial: ', self enFechaEspecial asString, 	String cr, ' - Porcentaje extra: ', self porcentajeExtra asString, 	String cr, ' - Precio final: $', self calcularPrecio asString).	! !PaqueteTuristico subclass: #PaqueteMedida	instanceVariableNames: 'visa itinerario costoServicios costoTransporte costoExcusiones dias'	classVariableNames: ''	package: 'TP1_94663Brondo_'!!PaqueteMedida commentStamp: 'Joaco 4/22/2023 21:51' prior: 0!Descripci‚àö‚â•n:Entidad que describe un paquete espec‚àö‚â†fico personalizado seg‚àö‚à´n las preferencias del cliente.Comportamientos:√î√á‚àë Inicializaci‚àö‚â•n√î√á‚àë mensajes de acceso y modificaci‚àö‚â•n√î√á‚àë asignarVisa: que permite agregar una visa alpaquete internacional .√î√á‚àë calcularPrecio: valor final a pagar por uncircuito nacional seg‚àö‚à´n las consideracionesindicadas anteriormente.√î√á‚àë asString: devuelve una cadena con los datos delpaquete internacional, incluyendo el valor finaldel precio del paquete.     Instance Variables	costoExcusiones:		<Object>	costoServicios:		<Object>	costoTransporte:		<Object>	dias:		<Object>	itinerario:		<Object>	visa:		<Object>    Implementation Points!!PaqueteMedida methodsFor: 'accessing' stamp: 'Joaco 5/1/2023 14:26'!dias: anObject	(anObject isNumber) ifTrue: [dias := anObject].! !!PaqueteMedida methodsFor: 'accessing' stamp: 'Joaco 5/1/2023 14:27'!costoTransporte: anObject	(anObject isFloat) ifTrue: [ costoTransporte := anObject ].! !!PaqueteMedida methodsFor: 'accessing' stamp: 'Joaco 5/1/2023 14:28'!costoServicios: anObject	(anObject isFloat) ifTrue: [costoServicios := anObject].! !!PaqueteMedida methodsFor: 'accessing' stamp: 'Joaco 4/22/2023 21:45'!costoExcusiones	^ costoExcusiones! !!PaqueteMedida methodsFor: 'accessing' stamp: 'Joaco 5/1/2023 14:28'!costoExcusiones: anObject	(anObject isFloat) ifTrue: [costoExcusiones := anObject].! !!PaqueteMedida methodsFor: 'accessing' stamp: 'Joaco 4/22/2023 22:01'!asString 	"devuelve una cadena con los datos del paquete internacional, incluyendo el valor final del precio del paquete."	^('Visa: ', self visa asString, 	' - Itinerario: ', self itinerario asString, 	' - Costo de servicios: $', self costoServicios asString, 	' - Costo de transporte: $', self costoTransporte asString, 	' - Costo de excursiones: $', self costoExcusiones asString).! !!PaqueteMedida methodsFor: 'accessing' stamp: 'Joaco 4/22/2023 21:45'!costoServicios	^ costoServicios! !!PaqueteMedida methodsFor: 'accessing' stamp: 'Joaco 4/22/2023 21:45'!costoTransporte	^ costoTransporte! !!PaqueteMedida methodsFor: 'accessing' stamp: 'Joaco 4/22/2023 21:45'!itinerario	^ itinerario! !!PaqueteMedida methodsFor: 'accessing' stamp: 'Joaco 5/1/2023 14:26'!itinerario: anObject	(anObject isString) ifTrue: [ itinerario := anObject ].! !!PaqueteMedida methodsFor: 'accessing' stamp: 'Joaco 4/22/2023 21:45'!dias	^ dias! !!PaqueteMedida methodsFor: 'accessing' stamp: 'Joaco 4/22/2023 21:45'!visa	^ visa! !!PaqueteMedida methodsFor: 'accessing' stamp: 'Joaco 5/1/2023 14:24'!visa: anObject	(anObject isKindOf: Visa) ifTrue:[ visa := anObject ].! !!PaqueteMedida methodsFor: 'inicializacion' stamp: 'Joaco 5/1/2023 14:40'!initialize	"inicializa la instancia PaqueteMedida"	super initialize.	visa:= nil. "objeto que representa el permiso de entrada adicional seg‚àö‚à´n el pa‚àö‚â†s extranjero elegido por el cliente."	itinerario:=''. "cadena que describe el recorrido completo seg‚àö‚à´n los lugares y servicios elegidos por el cliente. "	costoServicios:=0.0. "suma de servicios elegidos "	costoTransporte:=0.0. "coste de transporte por pasajero seg‚àö‚à´n el tipo de transporte elegido"	costoExcusiones:=0.0. "suma de excursiones elegidas"	dias:=0. "d‚àö‚â†as de estad‚àö‚â†a en el pa‚àö‚â†s extranjero"! !!PaqueteMedida methodsFor: 'propios' stamp: 'Joaco 5/1/2023 14:46'!asignarVisa	"permite agregar una visa al paquete internacional ."		|unaVisa|	unaVisa:=Visa new.	self visa: unaVisa.! !!PaqueteMedida methodsFor: 'propios' stamp: 'Joaco 5/1/2023 14:20'!calcularPrecio	"valor final a pagar por un circuito nacional seg‚àö‚à´n las consideraciones indicadas anteriormente."	"se calculan como la suma de los montos de: servicios + transporte + excursiones, 	por la cantidad de d‚àö‚â†as definido por el cliente. 	Tener en cuenta que, si el pa‚àö‚â†s elegido por el cliente requiere visa, esta le suma un costo ‚àö‚à´nico adicional."	super calcularPrecio.	^super calcularPrecio + ((costoServicios + costoTransporte + costoExcusiones) * dias)! !!PaqueteMedida methodsFor: 'propios' stamp: 'Joaco 5/1/2023 14:45'!asignarVisa: unaVisa	"permite agregar una visa al paquete internacional ."		(unaVisa isKindOf: Visa) ifTrue:[self visa: unaVisa].! !Object subclass: #Visa	instanceVariableNames: 'tipo costo pais'	classVariableNames: ''	package: 'TP1_94663Brondo_'!!Visa commentStamp: 'Joaco 4/22/2023 18:48' prior: 0!Descripci‚àö‚â•n:Entidad que representa un permiso de entrada en un pa‚àö‚â†s cuyo costo incrementa el valor final de los paquetesinternacionales ofrecidos por la agencia. Comportamientos:	√î√á‚àë Inicializaci‚àö‚â•n	√î√á‚àë mensajes de acceso y modificaci‚àö‚â•n	√î√á‚àë costoFinalVisa: que devuelve el valor en pesos	del costo final de la visa. Este valor depende del	tipo: las de tipo 1 y 2 tienen un descuento del	5% por convenio de pa‚àö‚â†s acordados. Para el	resto no se aplica este beneficio.	√î√á‚àë asString: que devuelve una cadena con la	descripci‚àö‚â•n completa de la visa.    Instance Variables	costo:		<Object>	pais:		<Object>	tipo:		<Object>    Implementation Points!!Visa methodsFor: 'accessing' stamp: 'Joaco 4/22/2023 19:13'!costo: anObject	anObject isFloat ifTrue:[costo := anObject]! !!Visa methodsFor: 'accessing' stamp: 'Joaco 4/22/2023 18:48'!costo	^ costo! !!Visa methodsFor: 'accessing' stamp: 'Joaco 4/22/2023 18:48'!tipo	^ tipo! !!Visa methodsFor: 'accessing' stamp: 'Joaco 4/22/2023 18:48'!pais	^ pais! !!Visa methodsFor: 'accessing' stamp: 'Joaco 4/22/2023 19:01'!tipo: anObject	anObject isNumber ifTrue:[anObject >0 ifTrue:[tipo := anObject]]	! !!Visa methodsFor: 'accessing' stamp: 'Joaco 4/22/2023 19:13'!pais: anObject	anObject isString ifTrue:[pais := anObject]! !!Visa methodsFor: 'initialization' stamp: 'Joaco 4/22/2023 19:25'!initialize 	"inicializa la instancia Visa"	costo:=0.0.	pais:='S/A'.	tipo:=0.! !!Visa methodsFor: 'propios' stamp: 'Joaco 4/22/2023 19:28'!costoFinalVisa	"devuelve el valor en pesos	del costo final de la visa. Este valor depende del	tipo: las de tipo 1 y 2 tienen un descuento del	5% por convenio de pa‚àö‚â†s acordados. Para el	resto no se aplica este beneficio."		|res|	res:=0.	tipo <3 ifTrue:[res:=5].	^costo - (costo * (res / 100)).! !!Visa methodsFor: 'converting' stamp: 'Joaco 4/22/2023 19:28'!asString	"Devuelve la Visa en forma de cadena"	^('Tipo de visa: ', self tipo asString, ' - Pais: ', self pais asString, ' - Costo: $', self costoFinalVisa asString).! !